START
MOV SP, 1535
MOV BP, 1535
CALL MAIN
HALT
MOV R0, R0//	Function initialize Begins here
initialize:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable p binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
LABEL1:
MOV R0, R0//	Accessing local variable p binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 100
LT R1, R2
JZ R1, LABEL2
MOV R0, R0//	Accessing local variable r binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Writing to Memory
MOV R0, R0//	Accessing local variable strt binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 2
MOV R2, 2
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 10
MUL R2, R3
ADD R1, R2
MOV R2, 9
ADD R1, R2
MOV R2, 0
MOV [R1], R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable p binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable p binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 1
ADD R1, R2
MOV [R0], R1
JMP LABEL1
LABEL2:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, 0
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function initialize ends here
MOV R0, R0//	Function alloc Begins here
alloc:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable strt binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable value binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable p binding 4 for =
MOV R0, 4
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
LABEL3:
MOV R0, R0//	Accessing local variable p binding 4
MOV R1, 4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 100
LT R1, R2
JZ R1, LABEL4
MOV R0, R0//	Accessing local variable r binding 3 for =
MOV R0, 3
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Reading Memory
MOV R0, R0//	Accessing local variable strt binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 4
MOV R2, 4
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 10
MUL R2, R3
ADD R1, R2
MOV R2, 9
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable r binding 3
MOV R1, 3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
EQ R1, R2
JZ R1, LABEL5
MOV R0, R0//	Accessing local variable r binding 3 for =
MOV R0, 3
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Writing to Memory
MOV R0, R0//	Accessing local variable strt binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 4
MOV R2, 4
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 10
MUL R2, R3
ADD R1, R2
MOV R2, 9
ADD R1, R2
MOV R2, 1
MOV [R1], R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable value binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable strt binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 4
MOV R2, 4
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 10
MUL R2, R3
ADD R1, R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 2
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
JMP LABEL6
LABEL5:
LABEL6:
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable p binding 4 for =
MOV R0, 4
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable p binding 4
MOV R1, 4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 1
ADD R1, R2
MOV [R0], R1
JMP LABEL3
LABEL4:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 2
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function alloc ends here
MOV R0, R0//	Function initializeQueue Begins here
initializeQueue:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable p binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable strt binding -3 for =
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R1, 600
MOV [R0], R1
MOV R0, R0//	End of Statement
LABEL8:
MOV R0, R0//	Accessing local variable p binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 100
LT R1, R2
JZ R1, LABEL9
MOV R0, R0//	Accessing local variable r binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Writing to Memory
MOV R0, R0//	Accessing local variable strt binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 2
MOV R2, 2
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 3
MUL R2, R3
ADD R1, R2
MOV R2, 2
ADD R1, R2
MOV R2, 0
MOV [R1], R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable p binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable p binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 1
ADD R1, R2
MOV [R0], R1
JMP LABEL8
LABEL9:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, 0
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function initializeQueue ends here
MOV R0, R0//	Function allocQueue Begins here
allocQueue:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable strt binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R1, 600
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable value binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable p binding 4 for =
MOV R0, 4
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
LABEL10:
MOV R0, R0//	Accessing local variable p binding 4
MOV R1, 4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 100
LT R1, R2
JZ R1, LABEL11
MOV R0, R0//	Accessing local variable r binding 3 for =
MOV R0, 3
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Reading Memory
MOV R0, R0//	Accessing local variable strt binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 4
MOV R2, 4
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 3
MUL R2, R3
ADD R1, R2
MOV R2, 2
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable r binding 3
MOV R1, 3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
EQ R1, R2
JZ R1, LABEL12
MOV R0, R0//	Accessing local variable r binding 3 for =
MOV R0, 3
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Writing to Memory
MOV R0, R0//	Accessing local variable strt binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 4
MOV R2, 4
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 3
MUL R2, R3
ADD R1, R2
MOV R2, 2
ADD R1, R2
MOV R2, 1
MOV [R1], R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable value binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable strt binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing local variable p binding 4
MOV R2, 4
MOV R3, BP
ADD R2, R3
MOV R2, [R2]
MOV R3, 3
MUL R2, R3
ADD R1, R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 2
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
JMP LABEL13
LABEL12:
LABEL13:
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable p binding 4 for =
MOV R0, 4
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable p binding 4
MOV R1, 4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 1
ADD R1, R2
MOV [R0], R1
JMP LABEL10
LABEL11:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 2
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function allocQueue ends here
MOV R0, R0//	Function freeQueue Begins here
freeQueue:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable value binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable r binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Writing to Memory
MOV R0, R0//	Accessing local variable position binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 2
ADD R1, R2
MOV R2, 0
MOV [R1], R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 1
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function freeQueue ends here
MOV R0, R0//	Function enque Begins here
enque:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable new binding 3 for =
MOV R0, 3
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function allocQueue
MOV R0, R0//	For return Address
PUSH R0
CALL allocQueue
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Restoring Registers
POP R0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable new binding 3
MOV R0, 3
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R0, R0//	Accessing attribute value binding 1
MOV R1, 1
ADD R0, R1
MOV R0, R0//	Accessing local variable expr binding -4
MOV R1, -4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable qvar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
EQ R1, R2
JZ R1, LABEL15
MOV R0, R0//	Accessing local variable qvar binding -3 for =
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable new binding 3
MOV R1, 3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
JMP LABEL16
LABEL15:
MOV R0, R0//	Accessing local variable temp binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Accessing local variable qvar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
MOV R0, R0//	End of Statement
LABEL18:
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable temp binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
GT R1, R2
JZ R1, LABEL19
MOV R0, R0//	Accessing local variable temp binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable temp binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
JMP LABEL18
LABEL19:
MOV R0, R0//	End of Statement
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable temp binding 2
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R0, R0//	Accessing attribute next binding 0
MOV R1, 0
ADD R0, R1
MOV R0, R0//	Accessing local variable new binding 3
MOV R1, 3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
LABEL16:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 1
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function enque ends here
MOV R0, R0//	Function deque Begins here
deque:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable value binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qvar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute value binding 1
MOV R2, 1
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 1
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function deque ends here
MOV R0, R0//	Function free Begins here
free:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable value binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable r binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0 // Writing to Memory
MOV R0, R0//	Accessing local variable position binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 9
ADD R1, R2
MOV R2, 0
MOV [R1], R2
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable value binding 1
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function free ends here
MOV R0, R0//	Function getLast Begins here
getLast:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable qVar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
EQ R1, R2
JZ R1, LABEL20
MOV R0, R0//	Return Statement Begins Here
MOV R0, 0
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
JMP LABEL21
LABEL20:
LABEL21:
MOV R0, R0//	End of Statement
LABEL23:
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qVar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
GT R1, R2
JZ R1, LABEL24
MOV R0, R0//	Accessing local variable qVar binding -3 for =
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qVar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
JMP LABEL23
LABEL24:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable qVar binding -3
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function getLast ends here
MOV R0, R0//	Function readTree Begins here
readTree:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
MOV R0, 1
MOV R1, BP
ADD R0, R1
IN R1
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable tVar binding -3 for =
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function alloc
MOV R0, R0//	For return Address
PUSH R0
CALL alloc
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Restoring Registers
POP R0
MOV [R0], R1
MOV R0, R0//	End of Statement
LABEL25:
MOV R0, R0//	Accessing local variable i binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
GT R1, R2
JZ R1, LABEL26
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function enque
MOV R0, R0//	Accessing local variable i binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable tVar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute q binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL enque
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Call By Reference Problem
MOV R0, R0//	Attribute Problem
POP R2
MOV R0, R0//	Accessing local variable tVar binding -3
MOV R3, -3
MOV R4, BP
ADD R3, R4
MOV R3, [R3]
MOV R0, R0//	Accessing attribute q binding 0
MOV R4, 0
ADD R3, R4
MOV [R3], R2
POP R0
MOV R0, R0//	Restoring Registers
POP R0
MOV R0, R0//	End of Statement
MOV R0, 1
MOV R1, BP
ADD R0, R1
IN R1
MOV [R0], R1
JMP LABEL25
LABEL26:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, 1
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function readTree ends here
MOV R0, R0//	Function printrev Begins here
printrev:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qVar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute value binding 1
MOV R2, 1
ADD R1, R2
MOV R1, [R1]
OUT R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qVar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
GT R1, R2
JZ R1, LABEL27
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function printrev
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qVar binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL printrev
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
POP R0
MOV R0, R0//	Restoring Registers
POP R0
JMP LABEL28
LABEL27:
LABEL28:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, 1
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function printrev ends here
MOV R0, R0//	Function mergeQueue Begins here
mergeQueue:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable flag binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
LABEL30:
MOV R0, R0//	Accessing local variable qb binding -4
MOV R1, -4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
GT R1, R2
JZ R1, LABEL31
MOV R0, R0//	Accessing local variable flag binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R2, 0
GT R1, R2
JZ R1, LABEL32
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function enque
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qb binding -4
MOV R1, -4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute value binding 1
MOV R2, 1
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	Accessing local variable q binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL enque
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Call By Reference Problem
POP R2
MOV R0, R0//	Accessing local variable q binding 1
MOV R3, 1
MOV R4, BP
ADD R3, R4
MOV [R3], R2
POP R0
MOV R0, R0//	Restoring Registers
POP R0
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable flag binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R1, 0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable qb binding -4 for =
MOV R0, -4
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qb binding -4
MOV R1, -4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
JMP LABEL33
LABEL32:
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function enque
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qa binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute value binding 1
MOV R2, 1
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	Accessing local variable q binding 1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL enque
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Call By Reference Problem
POP R2
MOV R0, R0//	Accessing local variable q binding 1
MOV R3, 1
MOV R4, BP
ADD R3, R4
MOV [R3], R2
POP R0
MOV R0, R0//	Restoring Registers
POP R0
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable flag binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R1, 1
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable qa binding -3 for =
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable qa binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute next binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
MOV [R0], R1
LABEL33:
JMP LABEL30
LABEL31:
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable q binding 1
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function mergeQueue ends here
MOV R0, R0//	Function mergeTree Begins here
mergeTree:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable t binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function alloc
MOV R0, R0//	For return Address
PUSH R0
CALL alloc
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Restoring Registers
POP R0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable t binding 1
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R0, R0//	Accessing attribute q binding 0
MOV R1, 0
ADD R0, R1
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function mergeQueue
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable tb binding -4
MOV R1, -4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute q binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable ta binding -3
MOV R1, -3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute q binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL mergeQueue
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
POP R0
POP R0
MOV R0, R0//	Restoring Registers
POP R0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, R0//	Accessing local variable t binding 1
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function mergeTree ends here
MOV R0, R0//	Function MAIN Begins here
MAIN:
PUSH BP
MOV BP,SP
MOV R0, R0//	 Pushing for Local variables
MOV R1, 0
PUSH R1
PUSH R1
PUSH R1
PUSH R1
PUSH R1
PUSH R1
PUSH R1
PUSH R1
MOV R0, R0//	Accessing local variable p binding 1 for =
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function alloc
MOV R0, R0//	For return Address
PUSH R0
CALL alloc
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Restoring Registers
POP R0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function readTree
MOV R0, R0//	Accessing local variable ta binding 4
MOV R1, 4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL readTree
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Call By Reference Problem
POP R2
MOV R0, R0//	Accessing local variable ta binding 4
MOV R3, 4
MOV R4, BP
ADD R3, R4
MOV [R3], R2
MOV R0, R0//	Restoring Registers
POP R0
MOV R0, R0//	End of Statement
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function readTree
MOV R0, R0//	Accessing local variable tb binding 3
MOV R1, 3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL readTree
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
MOV R0, R0//	Call By Reference Problem
POP R2
MOV R0, R0//	Accessing local variable tb binding 3
MOV R3, 3
MOV R4, BP
ADD R3, R4
MOV [R3], R2
MOV R0, R0//	Restoring Registers
POP R0
MOV R0, R0//	End of Statement
MOV R0, R0//	Accessing local variable t binding 2 for =
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function mergeTree
MOV R0, R0//	Accessing local variable tb binding 3
MOV R1, 3
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	Accessing local variable ta binding 4
MOV R1, 4
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL mergeTree
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
POP R0
POP R0
MOV R0, R0//	Restoring Registers
POP R0
MOV [R0], R1
MOV R0, R0//	End of Statement
MOV R0, R0//	Pushing All Used Registers(0)
PUSH R0
MOV R0, R0//	Calling Function printrev
MOV R0, R0//	Attribute Problem
MOV R0, R0//	Accessing local variable t binding 2
MOV R1, 2
MOV R2, BP
ADD R1, R2
MOV R1, [R1]
MOV R0, R0//	Accessing attribute q binding 0
MOV R2, 0
ADD R1, R2
MOV R1, [R1]
PUSH R1
MOV R0, R0//	For return Address
PUSH R0
CALL printrev
MOV R0, R0//	To Get The Return Value
POP R1
MOV R0, R0//	Removing Arguments
POP R0
MOV R0, R0//	Restoring Registers
POP R0
MOV R0, R0//	End of Statement
MOV R0, R0//	Return Statement Begins Here
MOV R0, 1
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV R0, R0//	Function MAIN ends here
HALT
